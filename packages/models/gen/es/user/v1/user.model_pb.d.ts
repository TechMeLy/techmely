// @generated by protoc-gen-es v1.8.0
// @generated from file user/v1/user.model.proto (package gen.go.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum gen.go.user.v1.UserRoles
 */
export declare enum UserRoles {
  /**
   * @generated from enum value: SUPER_ADMIN = 0;
   */
  SUPER_ADMIN = 0,

  /**
   * @generated from enum value: MODERATOR = 1;
   */
  MODERATOR = 1,

  /**
   * @generated from enum value: ADMIN = 2;
   */
  ADMIN = 2,

  /**
   * @generated from enum value: MEMBER = 3;
   */
  MEMBER = 3,

  /**
   * @generated from enum value: GUEST = 4;
   */
  GUEST = 4,
}

/**
 * @generated from enum gen.go.user.v1.UserStatus
 */
export declare enum UserStatus {
  /**
   * @generated from enum value: VERIFIED = 0;
   */
  VERIFIED = 0,

  /**
   * @generated from enum value: BLACKLIST = 1;
   */
  BLACKLIST = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: CLOSED = 4;
   */
  CLOSED = 4,
}

/**
 * @generated from message gen.go.user.v1.UserProvider
 */
export declare class UserProvider extends Message<UserProvider> {
  /**
   * @generated from field: string githubId = 1;
   */
  githubId: string;

  /**
   * @generated from field: string googleId = 2;
   */
  googleId: string;

  /**
   * @generated from field: string facebookId = 3;
   */
  facebookId: string;

  /**
   * @generated from field: string appleId = 4;
   */
  appleId: string;

  constructor(data?: PartialMessage<UserProvider>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gen.go.user.v1.UserProvider";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserProvider;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserProvider;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserProvider;

  static equals(a: UserProvider | PlainMessage<UserProvider> | undefined, b: UserProvider | PlainMessage<UserProvider> | undefined): boolean;
}

/**
 * @generated from message gen.go.user.v1.UserMetadata
 */
export declare class UserMetadata extends Message<UserMetadata> {
  /**
   * @generated from field: string openPlatform = 1;
   */
  openPlatform: string;

  /**
   * @generated from field: string utmCampaign = 2;
   */
  utmCampaign: string;

  /**
   * @generated from field: string utmMedium = 3;
   */
  utmMedium: string;

  /**
   * @generated from field: string utmSource = 4;
   */
  utmSource: string;

  constructor(data?: PartialMessage<UserMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gen.go.user.v1.UserMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserMetadata;

  static equals(a: UserMetadata | PlainMessage<UserMetadata> | undefined, b: UserMetadata | PlainMessage<UserMetadata> | undefined): boolean;
}

/**
 * @generated from message gen.go.user.v1.User
 */
export declare class User extends Message<User> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string unverified_email = 3;
   */
  unverifiedEmail: string;

  /**
   * @generated from field: bool is_email_verified = 4;
   */
  isEmailVerified: boolean;

  /**
   * @generated from field: string nickname = 5;
   */
  nickname: string;

  /**
   * @generated from field: string mobile = 6;
   */
  mobile: string;

  /**
   * @generated from field: string birthday = 7;
   */
  birthday: string;

  /**
   * @generated from field: string name = 8;
   */
  name: string;

  /**
   * @generated from field: string avatar_url = 9;
   */
  avatarUrl: string;

  /**
   * @generated from field: string locale = 10;
   */
  locale: string;

  /**
   * @generated from field: string region = 11;
   */
  region: string;

  /**
   * @generated from field: string country_code = 12;
   */
  countryCode: string;

  /**
   * @generated from field: string gender = 13;
   */
  gender: string;

  /**
   * @generated from field: string salt = 14;
   */
  salt: string;

  /**
   * @generated from field: int64 last_login = 15;
   */
  lastLogin: bigint;

  /**
   * @generated from field: bool is_beta_user = 16;
   */
  isBetaUser: boolean;

  /**
   * @generated from field: gen.go.user.v1.UserMetadata metadata = 17;
   */
  metadata?: UserMetadata;

  /**
   * @generated from field: gen.go.user.v1.UserProvider provider = 18;
   */
  provider?: UserProvider;

  constructor(data?: PartialMessage<User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gen.go.user.v1.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User;

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean;
}

